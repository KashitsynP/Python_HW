#      Задание 1

# """Написать программу «справочник». Создать два списка
# целых. Один список хранит идентификационные коды,
# второй — телефонные номера. Реализовать меню для
# пользователя:
# ■ Отсортировать по идентификационным кодам;
# ■ Отсортировать по номерам телефона;
# ■ Вывести список пользователей с кодами и телефонами;
# ■ Выход."""

# imei = [
#     '123456789123455', 
#     '123456789123454', 
#     '123456789123453',
#     '123456789123452', 
#     '123456789123451', 
#     ]
# ph_n = [
#     '+79821234561', 
#     '+79821234562',
#     '+79821234563',
#     '+79821234564',
#     '+79821234565',
#     ]

# def phone_info(imei, ph_n):
#     # Создаём функцию, которая объединяет imei и ph_n и выводит результат в консоль
#     for i, n in zip(imei, ph_n):
#         print(f'imei: {i}, phone number: {n}\n-------------------------------------------------')

# def sort_phone(s, c):
#     # Функция сортирует список в зависимости от последовательности введенных параметров s и с
#     # s - sample("образец") → список, по которому будем сотрировать
#     # c - convert("перестраивать") → список, который будем перестраивать для соблюдения привязки
#     # Возвращает вызов функции phone_info с отсортированным списком
#     n = len(s)
#     for i in range(n - 1):
#         for j in range(n - i - 1):
#             if s[j] > s[j+1]:
#                 s[j], s[j+1] = s[j+1], s[j]
#                 c[j], c[j+1] = c[j+1], c[j]
#     # Формируем условие для правильной последовательности аргументов (чтобы imei и ph_n были на своих местах)
#     if len(s[0]) > len(c[0]):
#         return phone_info(s, c)
#     else:
#         return phone_info(c, s)

# def directoryUI():
#     # Основная функция "Справочник"
#     # Реализует меню пользователя
#     print("---------------Справочник----------------")
#     while True:
#         print("\nМеню пльзователя:\n\n1 - вывести справочник\n2 - сортировка по imei\n3 - сортировка по номерам телефонов\n4 - выход")
#         choise = input(">>>>")
#         match choise:
#             case '1':
#                 phone_info(imei, ph_n)
#             case '2':
#                 print(sort_phone(imei, ph_n))
#             case '3':
#                 print(sort_phone(ph_n, imei))
#             case '4':
#                 print("Good bye!")
#                 break
#             case _:
#                 print("Error! Неверная команда")
#                 continue
# directoryUI()
#############################################################################################################################

#      Задание 2

"""Написать программу «книги». Создать два списка
с данными. Один список хранит названия книг, второй —
годы выпуска. Реализовать меню для пользователя:
■ Отсортировать по названию книг;
■ Отсортировать по годам выпуска;
■ Вывести список книг с названиями и годами выпуска;
■ Выход;"""

list_books = ['Сам себе программист, К. Альтхофф', 'Технический минимум по computer science, В. Феррейра Фило', 'Скотный двор, Д.Оруэлл', 'Основание А.Азимов']
list_books_year = ['2017', '2017', '1945', '1951']

def print_books(list_books, list_books_year):
    # Объединяет список книг и годов выпуска. Выводит в консоль сформированный список
    for j, i, n in zip(range(len(list_books)), list_books, list_books_year):
        # Проверяем длину переменной n по условию, чтобы год выпуска был на своём месте
        print((f'{j+1}. {i}  ({n}г.)') if len(n) == 4 else (f'{j+1}. {n}  ({i}г.)'))
    print("-----------------------------------------")

def sort_books(s, c):
    # Функция сортирует список в зависимости от последовательности введенных параметров s и с
    # s - sample("образец") → список, по которому будем сотрировать
    # c - convert("перестраивать") → список, который будем перестраивать для соблюдения привязки
    # Возвращает вызов функции print_books с отсортированным списком
    n = len(s)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if s[j] > s[j+1]:
                s[j], s[j+1] = s[j+1], s[j]
                c[j], c[j+1] = c[j+1], c[j]
    return print_books(s, c)

def booksUI():
    # Основная функция
    # Реализует меню пользователя
    print("┌---------------------------------------┐\n|-----------------Книги-----------------|\n└---------------------------------------┘")
    while True:
        print("\nМеню пользователя\nВыберите:\n1 - показать книги\n2 - сортировать по названию\n3 - сортировать по году выпуска\n4 - выход\n")
        choise = input(">>>> ")
        match choise:
            case '1':
                print_books(list_books, list_books_year)
            case '2':
                sort_books(list_books, list_books_year)
            case '3':
                sort_books(list_books_year, list_books)
            case '4':
                print("Good bye!")
                break
            case _:
                print("Error! Ошибка ввода!")
booksUI()

